{
  "Cobertura/SummaryGithub.html": {
    "href": "Cobertura/SummaryGithub.html",
    "title": "Summary | MyMath App",
    "summary": "Summary Summary Generated on: 05/18/2025 - 18:02:14 Coverage date: 05/18/2025 - 18:02:12 Parser: Cobertura Assemblies: 1 Classes: 1 Files: 1 Line coverage: 100% (12 of 12) Covered lines: 12 Uncovered lines: 0 Coverable lines: 12 Total lines: 29 Branch coverage: 100% (4 of 4) Covered branches: 4 Total branches: 4 Method coverage: Feature is only available for sponsors Coverage Math.Lib - 100% Name Line Branch Math.Lib 100% 100% Math.Lib.Rooter 100% 100%"
  },
  "disenio.html": {
    "href": "disenio.html",
    "title": "| MyMath App",
    "summary": "classDiagram class Class class Rooter Rooter : +SquareRoot() Double"
  },
  "docs/Math.Lib.Class1.html": {
    "href": "docs/Math.Lib.Class1.html",
    "title": "Class Class1 | MyMath App",
    "summary": "Class Class1 Namespace Math.Lib Assembly Math.Lib.dll public class Class1 Inheritance object Class1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "docs/Math.Lib.Rooter.html": {
    "href": "docs/Math.Lib.Rooter.html",
    "title": "Class Rooter | MyMath App",
    "summary": "Class Rooter Namespace Math.Lib Assembly Math.Lib.dll Clase que proporciona operaciones matemáticas relacionadas con raíces cuadradas. public class Rooter Inheritance object Rooter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SquareRoot(double) Calcula la raíz cuadrada de un número positivo usando el método de Newton-Raphson. public double SquareRoot(double input) Parameters input double Número del cual se desea calcular la raíz cuadrada. Debe ser positivo. Returns double La raíz cuadrada del número ingresado. Exceptions ArgumentOutOfRangeException Se lanza si el número ingresado es negativo o cero."
  },
  "docs/Math.Lib.html": {
    "href": "docs/Math.Lib.html",
    "title": "Namespace Math.Lib | MyMath App",
    "summary": "Namespace Math.Lib Classes Class1 Rooter Clase que proporciona operaciones matemáticas relacionadas con raíces cuadradas."
  },
  "docs/Math.Tests.RooterTests.html": {
    "href": "docs/Math.Tests.RooterTests.html",
    "title": "Class RooterTests | MyMath App",
    "summary": "Class RooterTests Namespace Math.Tests Assembly Math.Tests.dll [TestClass] public class RooterTests Inheritance object RooterTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BasicRooterTest() [TestMethod] public void BasicRooterTest() RooterTestNegativeInputx() [TestMethod] public void RooterTestNegativeInputx() RooterTestNegativeInputxWithMessage() [TestMethod] public void RooterTestNegativeInputxWithMessage() RooterValueRange() [TestMethod] public void RooterValueRange()"
  },
  "docs/Math.Tests.UnitTest1.html": {
    "href": "docs/Math.Tests.UnitTest1.html",
    "title": "Class UnitTest1 | MyMath App",
    "summary": "Class UnitTest1 Namespace Math.Tests Assembly Math.Tests.dll [TestClass] public class UnitTest1 Inheritance object UnitTest1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TestMethod1() [TestMethod] public void TestMethod1()"
  },
  "docs/Math.Tests.html": {
    "href": "docs/Math.Tests.html",
    "title": "Namespace Math.Tests | MyMath App",
    "summary": "Namespace Math.Tests Classes RooterTests UnitTest1"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | MyMath App",
    "summary": "This is the HOMEPAGE. Pruebas HTML Diagrama de Clases Pruebas Markdown"
  }
}